// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: rootProject.file("gradle/config.gradle")
    repositories {

        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        maven {
            url 'https://maven.google.com' // Google的Maven仓库
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
        mavenCentral()
        if ("true".equalsIgnoreCase(System.getProperty('useLocalMaven', "false"))) {
            println "use local repo"
            mavenLocal()
        } else {
            println "use remove repo"
            maven { url findProperty("RELEASE_REPOSITORY_URL") }
            maven { url findProperty("SNAPSHOT_REPOSITORY_URL") }
        }
    }
    dependencies {
        classpath deps.plugin.digital
        classpath deps.plugin.shadow
        classpath deps.plugin['bintray-plugin']
        classpath deps.gradle.agp
        classpath deps.kotlin.plugin

        if ("true".equalsIgnoreCase(System.getProperty("enableAabResGuardPlugin", "false"))) {
//            classpath deps.aabresguard.plugin
        }
    }
}

allprojects {
    repositories {

        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

//        jcenter()
        maven {
            url 'https://maven.google.com' // Google的Maven仓库
        }
        if ("true".equalsIgnoreCase(System.getProperty('useLocalMaven', "false"))) {
            mavenLocal()
        } else {
            maven { url findProperty("RELEASE_REPOSITORY_URL") }
            maven { url findProperty("SNAPSHOT_REPOSITORY_URL") }
        }
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
